Я являюсь разработчиком PWA-приложения под названием “PaeeeApi”, которое я хочу создать заново с нуля на платформе Replit.com, а затем перенести как статический код на GitHub.com для публикации через GitHub Pages без использования какого-либо серверного оборудования. Приложение будет устанавливаться через браузер Safari или любой другой браузер с главным экраном. У меня есть токен от OpenAI, который я добавил в секреты репозитория на GitHub под именем “PAEEEAPI”, и я уверен, что он работает. Мне нужно, чтобы ты настроил приложение с интеграцией OpenAI для работы как в оффлайн-режиме, так и в онлайн-режиме, с приоритетом на оффлайн-работу. Пожалуйста, помоги мне, объясняя всё словами, без использования кода, чтобы я мог понять и следить за процессом.
Общие требования:
Приложение не должно зависеть от серверов. Код будет создаваться на Replit.com, а затем синхронизироваться и храниться на GitHub.com для автоматической публикации через GitHub Pages. Офлайн-режим — это ключевой приоритет, и он должен работать в браузере Safari с лимитом кэша в пятьдесят мегабайт. Используй мой токен “PAEEEAPI” из секретов GitHub для онлайн-доступа к OpenAI. Учти возможные проблемы с подключением к внешним серверам и предложи способы их обойти, если они возникнут.
Настройка модели:
Настрой оффлайн-режим так, чтобы лёгкая версия модели OpenAI работала прямо в браузере без интернета. Используй доступную интернет-библиотеку, которая позволяет загружать такую модель без сервера. Убедись, что размер модели уменьшен до пятидесяти мегабайт, чтобы она помещалась в кэш и работала быстро. Пользователи должны вводить вопросы, а модель должна отвечать в интерфейсе даже без соединения.
Затем настрой онлайн-режим. Используй мой токен “PAEEEAPI” из секретов GitHub, чтобы приложение могло подключаться к серверам OpenAI и получать ответы, когда интернет доступен. Проверяй наличие интернета и переключайся на онлайн только при его наличии. Ответы должны отображаться в интерфейсе, обрабатывая большие тексты и разные стили вопросов, такие как разговор или перевод.
Логика обработки:
Сделай оффлайн-версию модели основной, чтобы она использовалась по умолчанию без интернета. Онлайн-версия должна быть запасным вариантом, включающимся только при подключении. Убедись, что приложение принимает длинные вопросы и отвечает естественно, как популярный чат-бот, адаптируясь к стилю пользователя. Ответы должны быть уникальными и релевантными.
Техническая настройка:
Начни с файла “index.html”, который будет открываться в браузере. Добавь подключение к интернет-библиотеке, позволяющей использовать модель OpenAI оффлайн. Включи поле для ввода текста, кнопку отправки и область для ответов. Также добавь команду для активации службы кэширования, чтобы приложение работало без интернета.
Настрой файл “script.js” для логики работы. Определи, как загружается оффлайн-версия модели OpenAI, и как делаются запросы к онлайн-серверам OpenAI с использованием моего токена из секретов GitHub. Добавь возможность видеть в консоли браузера, что происходит с запросами и ответами, чтобы я мог проверять, работает ли всё правильно.
Создай файл “sw.js” для управления кэшированием. Настрой его так, чтобы основные файлы приложения и библиотека модели сохранялись в кэше и загружались оттуда в первую очередь, а при отсутствии — проверяли интернет.
Настрой файл “deploy.yml” в папке “workflows” на GitHub для автоматической публикации. Укажи, чтобы он использовал мой секрет “PAEEEAPI” для онлайн-доступа к OpenAI после переноса с Replit.
Требования:
Убедись, что “PaeeeApi” работает оффлайн в Safari и других браузерах в пределах пятидесяти мегабайт кэша с оффлайн-версией OpenAI. Онлайн-режим должен использовать токен для быстрой обработки запросов. Учти возможные блокировки CORS и предложи обход, например, с помощью промежуточного сервиса, не требующего моего сервера. Настрой всё на Replit, протестируй на устройстве, устрани ошибки и помоги мне скачать файлы для переноса на GitHub, где всё должно продолжать работать стабильно.